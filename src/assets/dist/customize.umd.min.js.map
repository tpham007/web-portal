{"version":3,"sources":["ng://customize/lib/customize.service.ts","ng://customize/lib/tab/tab.component.ts","ng://customize/lib/tabset/tabset.component.ts","ng://customize/lib/customize.module.ts"],"names":["CustomizeService","Injectable","args","providedIn","TabComponent","this","title","active","disabled","prototype","ngOnInit","Component","selector","template","Input","TabsetComponent","onSelect","EventEmitter","ngAfterContentInit","tabs","toArray","actives","filter","t","length","console","error","tabClicked","tab","forEach","emit","Output","ContentChildren","CustomizeModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"wTAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAWE,SAAAA,IAHSC,KAAAC,MAAQ,GACRD,KAAAE,QAAS,EACTF,KAAAG,UAAW,EAMtB,OAHEJ,EAAAK,UAAAC,SAAA,iCAXDC,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,UACVC,SAAA,gIAICC,EAAAA,sBACAA,EAAAA,wBACAA,EAAAA,SAMHV,EAhBA,GCAAW,EAAA,WAYE,SAAAA,IAFUV,KAAAW,SAAW,IAAIC,EAAAA,aAuB3B,OAnBEF,EAAAN,UAAAS,mBAAA,eACQC,EAAOd,KAAKc,KAAKC,UACjBC,EAAUhB,KAAKc,KAAKG,OAAO,SAAAC,GAAO,OAAOA,EAAEhB,SAE7B,EAAjBc,EAAQG,OACTC,QAAQC,MAAM,sCACLL,EAAQG,QAAUL,EAAKK,SAChCL,EAAK,GAAGZ,QAAS,IAIrBQ,EAAAN,UAAAkB,WAAA,SAAWC,GACIvB,KAAKc,KAAKC,UAElBS,QAAQ,SAAAD,GAAO,OAAAA,EAAIrB,QAAS,IACjCqB,EAAIrB,QAAS,EAEbF,KAAKW,SAASc,KAAKF,wBA5BtBjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,aACVC,SAAA,miFAICC,EAAAA,wBACAiB,EAAAA,qBACAC,EAAAA,gBAAe9B,KAAA,CAACE,MAsBnBW,EAjCA,GCAAkB,EAAA,WAMA,SAAAA,KAO+B,2BAP9BC,EAAAA,SAAQhC,KAAA,CAAC,CACRiC,QAAS,CACPC,EAAAA,cAEFC,aAAc,CAACjC,EAAcW,GAC7BuB,QAAS,CAAClC,EAAcW,OAEKkB,EAb/B","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomizeService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'cos-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.css']\n})\nexport class TabComponent implements OnInit {\n  @Input() title = '';\n  @Input() active = false;\n  @Input() disabled = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, AfterContentInit , Input, Output, ContentChildren, EventEmitter} from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\n\n@Component({\n  selector: 'cos-tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabset.component.css']\n})\nexport class TabsetComponent implements AfterContentInit  {\n  @Input() vertical;\n  @Output() onSelect = new EventEmitter();\n  @ContentChildren(TabComponent) tabs;\n  constructor() { }\n\n  ngAfterContentInit() {\n    const tabs = this.tabs.toArray();\n    const actives = this.tabs.filter(t => { return t.active });\n\n    if(actives.length > 1) {\n      console.error(`Multiple active tabs set 'active'`);\n    } else if(!actives.length && tabs.length) {\n      tabs[0].active = true;\n    }\n  }\n\n  tabClicked(tab) {\n    const tabs = this.tabs.toArray();\n\n    tabs.forEach(tab => tab.active = false);\n    tab.active = true;\n\n    this.onSelect.emit(tab);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';  \n//import { BrowserModule } from '@angular/platform-browser';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsetComponent } from './tabset/tabset.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [TabComponent, TabsetComponent],\n  exports: [TabComponent, TabsetComponent]\n})\nexport class CustomizeModule { }\n"]}