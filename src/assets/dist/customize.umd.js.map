{"version":3,"file":"customize.umd.js.map","sources":["ng://customize/lib/customize.service.ts","ng://customize/lib/tab/tab.component.ts","ng://customize/lib/tabset/tabset.component.ts","ng://customize/lib/customize.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomizeService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'cos-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.css']\n})\nexport class TabComponent implements OnInit {\n  @Input() title = '';\n  @Input() active = false;\n  @Input() disabled = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, AfterContentInit , Input, Output, ContentChildren, EventEmitter} from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\n\n@Component({\n  selector: 'cos-tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabset.component.css']\n})\nexport class TabsetComponent implements AfterContentInit  {\n  @Input() vertical;\n  @Output() onSelect = new EventEmitter();\n  @ContentChildren(TabComponent) tabs;\n  constructor() { }\n\n  ngAfterContentInit() {\n    const tabs = this.tabs.toArray();\n    const actives = this.tabs.filter(t => { return t.active });\n\n    if(actives.length > 1) {\n      console.error(`Multiple active tabs set 'active'`);\n    } else if(!actives.length && tabs.length) {\n      tabs[0].active = true;\n    }\n  }\n\n  tabClicked(tab) {\n    const tabs = this.tabs.toArray();\n\n    tabs.forEach(tab => tab.active = false);\n    tab.active = true;\n\n    this.onSelect.emit(tab);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';  \n//import { BrowserModule } from '@angular/platform-browser';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsetComponent } from './tabset/tabset.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [TabComponent, TabsetComponent],\n  exports: [TabComponent, TabsetComponent]\n})\nexport class CustomizeModule { }\n"],"names":["Injectable","Component","Input","EventEmitter","Output","ContentChildren","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;+BAJD;KAEA;;;;;;ACFA;QAWE;YAHS,UAAK,GAAG,EAAE,CAAC;YACX,WAAM,GAAG,KAAK,CAAC;YACf,aAAQ,GAAG,KAAK,CAAC;SACT;;;;QAEjB,+BAAQ;;;YAAR;aACC;;oBAZFC,YAAS,SAAC;wBACT,QAAQ,EAAE,SAAS;wBACnB,sDAAmC;;qBAEpC;;;;;4BAEEC,QAAK;6BACLA,QAAK;+BACLA,QAAK;;QAMR,mBAAC;KAdD;;;;;;ACFA;QAYE;YAFU,aAAQ,GAAG,IAAIC,eAAY,EAAE,CAAC;SAEvB;;;;QAEjB,4CAAkB;;;YAAlB;;oBACQ,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;;oBAC1B,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAM,OAAO,CAAC,CAAC,MAAM,CAAA,EAAE,CAAC;gBAE1D,IAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;iBACpD;qBAAM,IAAG,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;oBACxC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;iBACvB;aACF;;;;;QAED,oCAAU;;;;YAAV,UAAW,GAAG;;oBACN,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAEhC,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,MAAM,GAAG,KAAK,GAAA,CAAC,CAAC;gBACxC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;gBAElB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACzB;;oBA7BFF,YAAS,SAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,qeAAsC;;qBAEvC;;;;;+BAEEC,QAAK;+BACLE,SAAM;2BACNC,kBAAe,SAAC,YAAY;;QAsB/B,sBAAC;KA9BD;;;;;;ACHA;QAMA;SAOgC;;oBAP/BC,WAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;wBAC7C,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;qBACzC;;QAC8B,sBAAC;KAPhC;;;;;;;;;;;;;;;;;;;;;;;;;"}
